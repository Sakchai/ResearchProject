@model IEnumerable<Research.Web.Models.SidebarMenu>
@inject IWorkContext workContext

@{
    var user = @workContext.CurrentUser;
    string name = $"{user.FirstName}";
    string role = string.Empty;

    switch ((int) user.UserType)
    {
    case 1:
        role = "ผู้ดูแลระบบ";
        break;
    case 2:
        role = "นักวิจัย";
        break;
    case 3:
        role = "เจ้าหน้าสถาบันพัฒนาวิจัย";
        break;
    case 4: 
        role = "ผู้ประสานงานวิจัย";
        break;
    case 5:
        role = "ผู้บริหาร";
        break;
    case 6:
        role = "Guests";
        break;
    }
}
<aside class="main-sidebar">
    <!-- sidebar: style can be found in sidebar.less -->
    <section class="sidebar">
        <!-- chai Sidebar user panel (optional) -->
        <div class="user-panel bg-gray">
            <div class="pull-left image">
                @*<img src="@User.GetUserProperty(CustomClaimTypes.AvatarURL)" class="img-circle" alt="ui">*@
                <span class="bg-gray">ชื่อผู้ใช้งาน:@name</span><br/>
                <span class="bg-gray">สิทธิ์:@role</span>
            </div>
            <div class="sidebar-menu tree">
                    @*<p>@User.GetUserProperty(CustomClaimTypes.GivenName) @User.GetUserProperty(CustomClaimTypes.Surname)</p>*@
                <!-- Status -->
                @*<a href="#"><i class="fa fa-circle text-success"></i> Online</a>*@
            </div>
        </div>
        <!-- search form (Optional) -->
        @*<form action="#" method="get" class="sidebar-form">
                <div class="input-group">
                    <input type="text" name="q" class="form-control" placeholder="Search...">
                    <span class="input-group-btn">
                        <button type="submit" name="search" id="search-btn" class="btn btn-flat">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
            </form>*@
        <!-- /.search form -->
        <!-- Sidebar Menu -->
        <ul class="sidebar-menu" data-widget="tree">
            @foreach (var menu in Model as IEnumerable<SidebarMenu>)
            {
                if (menu.Type == SidebarMenuType.Header)
                {
                    <li class="header">@menu.Name</li>
                }
                else if (menu.Type == SidebarMenuType.Link)
                {
                    var active = string.Empty;
                    if (menu.URLPath != "/" && @Context.Request.Path.Value.Contains(menu.URLPath))
                    {
                        active = "active";
                    }
                    <li class="@active">
                        <a href="@menu.URLPath">
                            <i class="@menu.IconClassName"></i>
                            <span>@menu.Name</span>
                            <span class="pull-right-container">
                                @{
                                    if (menu.LinkCounter.Item1 > 0)
                                    {
                                        <small class="label pull-right bg-blue">@menu.LinkCounter.Item1</small>
                                    }
                                    if (menu.LinkCounter.Item2 > 0)
                                    {
                                        <small class="label pull-right bg-green">@menu.LinkCounter.Item2</small>
                                    }
                                    if (menu.LinkCounter.Item3 > 0)
                                    {
                                        <small class="label pull-right bg-red">@menu.LinkCounter.Item3</small>
                                    }
                                }
                            </span>
                        </a>
                    </li>

                }
                else if (menu.Type == SidebarMenuType.Tree)
                {
                    var active = string.Empty;
                    if (menu.TreeChild.Any(x => @Context.Request.Path.Value.Contains(x.URLPath)))
                    {
                        active = "active";
                    }

                    <li class="treeview @active">
                        <a href="#">
                            <i class="@menu.IconClassName"></i> <span>@menu.Name</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-left pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            @foreach (SidebarMenu subMenu in menu.TreeChild)
                            {
                                active = string.Empty;
                                if (Context.Request.Path.Value.Contains(subMenu.URLPath))
                                {
                                    active = "active";
                                }
                                <li class="@active"><a class="@subMenu.IconClassName" href="@subMenu.URLPath"> @subMenu.Name</a></li>
                            }
                        </ul>
                    </li>
                }
            }
        </ul>
        <!-- /.sidebar-menu -->
    </section>
    <!-- /.sidebar -->
</aside>